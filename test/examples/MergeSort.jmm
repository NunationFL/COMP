import io.io;

class MergeSort {

    public static void main(String[] args)
    {
        int[] array;
        int size;
        MergeSort sorter;

        size = 6;
        array = new int[size];
        array[0] = 7;
        array[1] = 28;
        array[2] = 45;
        array[3] = 9;
        array[4] = 3;
        array[5] = 85;

        sorter = new MergeSort();

        sorter.sort(array, 0, size - 1);

        io.printarray(array);
    }


    public int merge(int[] array, int left, int middle, int right)
    {
        int[] L;
        int[] R;
        int n1;
        int n2;
        int i;
        int j;
        int k;

        n1 = middle - left + 1;
        n2 = right - middle;

        L = new int[n1];
        R = new int[n2];

        i=0;
        while(i<n1){
            L[i] = array[left + i];
            i=i+1;
        }

        i=0;
        while(i<n2){
            R[i] = array[middle + 1 + i];
            i=i+1;
        }

        i = 0;
        j = 0;

        k = left;

        while (i < n1 && j < n2) {
            if (L[i] < R[j]) {
                array[k] = L[i];
                i=i+1;
            }
            else {
                array[k] = R[j];
                j=j+1;
            }
            k=k+1;
        }

        while (i < n1) {
            array[k] = L[i];
            i=i+1;
            k=k+1;
        }

        while (j < n2) {
            array[k] = R[j];
            j=j+1;
            k=k+1;
        }

        return 1;
    }

    public int sort(int[] array, int left, int right)
    {
        int middle;

        if (left < right) {
            middle = left + (right - left)/2;

            this.sort(array, left, middle);
            this.sort(array, middle + 1, right);

            this.merge(array, left, middle, right);
        }
        else{

        }

        return 1;
    }
}
